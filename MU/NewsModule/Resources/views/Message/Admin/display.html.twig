{# purpose of this template: messages admin display view #}
{% set baseTemplate = app.request.query.getBoolean('raw', false) ? 'raw' : 'adminBase' %}
{% extends 'MUNewsModule::' ~ baseTemplate ~ '.html.twig' %}
{% block pageTitle %}{{ message|munewsmodule_formattedTitle|default(__('Message')) }}{% endblock %}
{% block title %}
    {% set templateTitle = message|munewsmodule_formattedTitle|default(__('Message')) %}
    {{ templateTitle|notifyFilters('munewsmodule.filter_hooks.messages.filter')|safeHtml }}{% if routeArea == 'admin' %} <small>({{ message.workflowState|munewsmodule_objectState(false)|lower }})</small>{% endif %}
    {% set itemActions = knp_menu_get('MUNewsModule:ItemActionsMenu:menu', [], {entity: message, area: routeArea, context: 'display'}) %}
    <div class="dropdown">
        <a id="itemActions{{ message.getKey() }}DropDownToggle" role="button" data-toggle="dropdown" data-target="#" href="javascript:void(0);" class="hidden dropdown-toggle"><i class="fa fa-tasks"></i> {{ __('Actions') }} <span class="caret"></span></a>
        {{ knp_menu_render(itemActions, {template: 'ZikulaMenuModule:Override:actions.html.twig'}) }}
    </div>
{% endblock %}
{% block admin_page_icon 'eye' %}
{% block content %}
    {% set isQuickView = app.request.query.getBoolean('raw', false) %}
    <div class="munewsmodule-message munewsmodule-display">

    <dl>
        {% if message.workflowState is not empty and routeArea == 'admin' %}
            <dt>{{ __('State') }}</dt>
            <dd>{{ message.workflowState|munewsmodule_listEntry('message', 'workflowState') }}</dd>
        {% endif %}
        {% if message.title is not empty %}
            <dt>{{ __('Title') }}</dt>
            <dd>{{ message.title }}</dd>
        {% endif %}
        {% if message.startText is not empty %}
            <dt>{{ __('Start text') }}</dt>
            <dd>{{ message.startText|safeHtml }}</dd>
        {% endif %}
        {% if message.imageUpload1 is not empty %}
            <dt>{{ __('Image upload 1') }}</dt>
            <dd>{% if message.imageUpload1 is not empty and message.imageUpload1Meta|default %}
                        <a href="{{ message.imageUpload1Url }}" title="{{ message|munewsmodule_formattedTitle|e('html_attr') }}"{% if message.imageUpload1Meta.isImage %} class="image-link"{% endif %}>
            {% if message.imageUpload1Meta.isImage %}
                {% set thumbOptions = attribute(thumbRuntimeOptions, 'messageImageUpload1') %}
                <img src="{{ message.imageUpload1.getPathname()|imagine_filter('zkroot', thumbOptions) }}" alt="{{ message|munewsmodule_formattedTitle|e('html_attr') }}" width="{{ thumbOptions.thumbnail.size[0] }}" height="{{ thumbOptions.thumbnail.size[1] }}" class="img-thumbnail" />
            {% else %}
                {{ __('Download') }} ({{ message.imageUpload1Meta.size|munewsmodule_fileSize(message.imageUpload1.getPathname(), false, false) }})
            {% endif %}
            </a>
            {% else %}&nbsp;{% endif %}
            </dd>
        {% endif %}
        {% if message.mainText is not empty %}
            <dt>{{ __('Main text') }}</dt>
            <dd>{{ message.mainText|safeHtml }}</dd>
        {% endif %}
        {% if message.imageUpload2 is not empty %}
            <dt>{{ __('Image upload 2') }}</dt>
            <dd>{% if message.imageUpload2 is not empty and message.imageUpload2Meta|default %}
                        <a href="{{ message.imageUpload2Url }}" title="{{ message|munewsmodule_formattedTitle|e('html_attr') }}"{% if message.imageUpload2Meta.isImage %} class="image-link"{% endif %}>
            {% if message.imageUpload2Meta.isImage %}
                {% set thumbOptions = attribute(thumbRuntimeOptions, 'messageImageUpload2') %}
                <img src="{{ message.imageUpload2.getPathname()|imagine_filter('zkroot', thumbOptions) }}" alt="{{ message|munewsmodule_formattedTitle|e('html_attr') }}" width="{{ thumbOptions.thumbnail.size[0] }}" height="{{ thumbOptions.thumbnail.size[1] }}" class="img-thumbnail" />
            {% else %}
                {{ __('Download') }} ({{ message.imageUpload2Meta.size|munewsmodule_fileSize(message.imageUpload2.getPathname(), false, false) }})
            {% endif %}
            </a>
            {% else %}&nbsp;{% endif %}
            </dd>
        {% endif %}
        {% if message.imageUpload3 is not empty %}
            <dt>{{ __('Image upload 3') }}</dt>
            <dd>{% if message.imageUpload3 is not empty and message.imageUpload3Meta|default %}
                        <a href="{{ message.imageUpload3Url }}" title="{{ message|munewsmodule_formattedTitle|e('html_attr') }}"{% if message.imageUpload3Meta.isImage %} class="image-link"{% endif %}>
            {% if message.imageUpload3Meta.isImage %}
                {% set thumbOptions = attribute(thumbRuntimeOptions, 'messageImageUpload3') %}
                <img src="{{ message.imageUpload3.getPathname()|imagine_filter('zkroot', thumbOptions) }}" alt="{{ message|munewsmodule_formattedTitle|e('html_attr') }}" width="{{ thumbOptions.thumbnail.size[0] }}" height="{{ thumbOptions.thumbnail.size[1] }}" class="img-thumbnail" />
            {% else %}
                {{ __('Download') }} ({{ message.imageUpload3Meta.size|munewsmodule_fileSize(message.imageUpload3.getPathname(), false, false) }})
            {% endif %}
            </a>
            {% else %}&nbsp;{% endif %}
            </dd>
        {% endif %}
        {% if message.imageUpload4 is not empty %}
            <dt>{{ __('Image upload 4') }}</dt>
            <dd>{% if message.imageUpload4 is not empty and message.imageUpload4Meta|default %}
                        <a href="{{ message.imageUpload4Url }}" title="{{ message|munewsmodule_formattedTitle|e('html_attr') }}"{% if message.imageUpload4Meta.isImage %} class="image-link"{% endif %}>
            {% if message.imageUpload4Meta.isImage %}
                {% set thumbOptions = attribute(thumbRuntimeOptions, 'messageImageUpload4') %}
                <img src="{{ message.imageUpload4.getPathname()|imagine_filter('zkroot', thumbOptions) }}" alt="{{ message|munewsmodule_formattedTitle|e('html_attr') }}" width="{{ thumbOptions.thumbnail.size[0] }}" height="{{ thumbOptions.thumbnail.size[1] }}" class="img-thumbnail" />
            {% else %}
                {{ __('Download') }} ({{ message.imageUpload4Meta.size|munewsmodule_fileSize(message.imageUpload4.getPathname(), false, false) }})
            {% endif %}
            </a>
            {% else %}&nbsp;{% endif %}
            </dd>
        {% endif %}
        {% if message.noEndDate is not empty %}
            <dt>{{ __('No end date') }}</dt>
            <dd>{% set itemId = message.getKey() %}
            <a id="toggleNoEndDate{{ itemId }}" href="javascript:void(0);" class="munews-ajax-toggle hidden" data-object-type="message" data-field-name="noEndDate" data-item-id="{{ itemId }}">
                <i class="fa fa-check{% if not message.noEndDate %} hidden{% endif %}" id="yesNoEndDate{{ itemId }}" title="{{ __('This setting is enabled. Click here to disable it.') }}"></i>
                <i class="fa fa-times{% if message.noEndDate %} hidden{% endif %}" id="noNoEndDate{{ itemId }}" title="{{ __('This setting is disabled. Click here to enable it.') }}"></i>
            </a>
            <noscript><div id="noscriptNoEndDate{{ itemId }}">
                {% if message.noEndDate %}
                    <i class="fa fa-check" title="{{ __('Yes') }}"></i>
                {% else %}
                    <i class="fa fa-times" title="{{ __('No') }}"></i>
                {% endif %}
            </div></noscript>
            </dd>
        {% endif %}
        
    </dl>

    {% if featureActivationHelper.isEnabled(constant('MU\\NewsModule\\Helper\\FeatureActivationHelper::CATEGORIES'), 'message') %}
        {{ include('@MUNewsModule/Helper/includeCategoriesDisplay.html.twig', {obj: message}) }}
    {% endif %}
    {{ include('@MUNewsModule/Helper/includeStandardFieldsDisplay.html.twig', {obj: message}) }}

    {{ block('display_hooks') }}
</div>
{% endblock %}
{% block display_hooks %}
    {% set hooks = notifyDisplayHooks(eventName='munewsmodule.ui_hooks.messages.display_view', id=message.getKey(), urlObject=currentUrlObject) %}
    {% for providerArea, hook in hooks if providerArea != 'provider.scribite.ui_hooks.editor' %}
        <h4>{{ providerArea }}</h4>
        {{ hook }}
    {% endfor %}
{% endblock %}
