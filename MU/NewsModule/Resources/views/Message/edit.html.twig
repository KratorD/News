{# purpose of this template: build the user form to edit an instance of message #}
{% set baseTemplate = app.request.query.getBoolean('raw', false) ? 'raw' : 'base' %}
{% extends 'MUNewsModule::' ~ baseTemplate ~ '.html.twig' %}

{% block header %}
    {{ parent() }}
    {{ pageAddAsset('javascript', zasset('@MUNewsModule:js/MUNewsModule.Validation.js'), 98) }}
    {{ pageAddAsset('javascript', zasset('@MUNewsModule:js/MUNewsModule.EditFunctions.js'), 99) }}
{% endblock %}
{% block title mode == 'create' ? __('Create message') : __('Edit message') %}
{% block content %}
    <div class="munewsmodule-message munewsmodule-edit">
        {% form_theme form with [
            '@MUNewsModule/Form/bootstrap_3.html.twig',
            'ZikulaFormExtensionBundle:Form:form_div_layout.html.twig'
        ] %}
        {{ form_start(form, {attr: {id: 'messageEditForm', class: 'munews-edit-form'}}) }}
        {{ form_errors(form) }}
        {% if translationsEnabled == true %}
            <div class="zikula-bootstrap-tab-container">
                <ul class="{{ form.vars.id|lower }}-translation-locales nav nav-tabs">
                    {% for language in supportedLanguages %}
                        <li{% if language == app.request.locale %} class="active"{% endif %}>
                            <a href="#" data-toggle="tab" data-target=".{{ form.vars.id|lower }}-translations-fields-{{ language }}">
                                {% if not form.vars.valid %}
                                    <span class="label label-danger"><i class="fa fa-warning"></i><span class="sr-only">{{ __('Errors') }}</span></span>
                                {% endif %}
                                {% set hasRequiredFields = language in localesWithMandatoryFields %}
                                {% if hasRequiredFields %}<span class="required">{% endif %}{{ language|languageName|safeHtml }}{% if hasRequiredFields %}</span>{% endif %}
                            </a>
                        </li>
                    {% endfor %}
                </ul>
                <div class="{{ form.vars.id|lower }}-translation-fields tab-content">
                    {% for language in supportedLanguages %}
                        <div class="{{ form.vars.id|lower }}-translations-fields-{{ language }} tab-pane fade{% if language == app.request.locale %} active in{% endif %}">
                            <fieldset>
                                <legend>{{ language|languageName|safeHtml }}</legend>
                                {% if language == app.request.locale %}
                                    {{ form_row(form.title) }}
                                    {{ form_row(form.startText) }}
                                    {{ form_row(form.mainText) }}
                                {% else %}
                                    {{ form_row(attribute(form, 'translations' ~ language)) }}
                                {% endif %}
                            </fieldset>
                        </div>
                    {% endfor %}
                </div>
            </div>
        {% else %}
            {% set language = app.request.locale %}
            <fieldset>
                <legend>{{ language|languageName|safeHtml }}</legend>
                {{ form_row(form.title) }}
                {{ form_row(form.startText) }}
                {{ form_row(form.mainText) }}
            </fieldset>
        {% endif %}
        <fieldset>
            <legend>{{ __('Further properties') }}</legend>
            {{ form_row(form.imageUpload1) }}
            <div class="hidden">
            {{ form_row(form.amountOfViews) }}
            </div>
            {{ form_row(form.author) }}
            {{ form_row(form.approver) }}
            {{ form_row(form.notes) }}
            {{ form_row(form.displayOnIndex) }}
            {{ form_row(form.messageLanguage) }}
            {{ form_row(form.allowComments) }}
            {{ form_row(form.imageUpload2) }}
            {{ form_row(form.imageUpload3) }}
            {{ form_row(form.imageUpload4) }}
            {{ form_row(form.startDate) }}
            {{ form_row(form.noEndDate) }}
            {{ form_row(form.endDate) }}
            {{ form_row(form.weight) }}
        </fieldset>
        
        {% if featureActivationHelper.isEnabled(constant('MU\\NewsModule\\Helper\\FeatureActivationHelper::CATEGORIES'), 'message') %}
            {{ include('@MUNewsModule/Helper/includeCategoriesEdit.html.twig', {obj: message}) }}
        {% endif %}
        {% if mode != 'create' %}
            {{ include('@MUNewsModule/Helper/includeStandardFieldsEdit.html.twig', {obj: message}) }}
        {% endif %}
        
        {% if formHookTemplates|length > 0 %}
            <fieldset>
                {% for hookTemplate in formHookTemplates %}
                    {{ include(hookTemplate.0, hookTemplate.1, ignore_missing = true) }}
                {% endfor %}
            </fieldset>
        {% endif %}
        
        <fieldset>
            <legend>{{ __('Communication') }}</legend>
            {{ form_row(form.additionalNotificationRemarks) }}
        </fieldset>
        
        {% if form.moderationSpecificCreator is defined %}
            <fieldset id="moderationFieldsSection">
                <legend>{{ __('Moderation') }} <i class="fa fa-expand"></i></legend>
                <div id="moderationFieldsContent">
                    {{ form_row(form.moderationSpecificCreator) }}
                    {{ form_row(form.moderationSpecificCreationDate) }}
                </div>
            </fieldset>
        {% endif %}
        
        {# include return control #}
        {% if mode == 'create' %}
            <fieldset>
                <legend>{{ __('Return control') }}</legend>
                {{ form_row(form.repeatCreation) }}
            </fieldset>
        {% endif %}
        
        {# include possible submit actions #}
        <div class="form-group form-buttons">
            <div class="col-sm-offset-3 col-sm-9">
                {% for action in actions %}
                    {{ form_widget(attribute(form, action.id)) }}
                {% endfor %}
                {{ form_widget(form.reset) }}
                {{ form_widget(form.cancel) }}
            </div>
        </div>
        {{ form_end(form) }}
        {% set hookId = mode != 'create' ? message.id : null %}
        {% set hooks = notifyDisplayHooks(eventName='munewsmodule.ui_hooks.messages.form_edit', id=hookId) %}
        {% if hooks is iterable and hooks|length > 0 %}
            <h3>{{ __('Hooks') }}</h3>
            {% for providerArea, hook in hooks if providerArea != 'provider.scribite.ui_hooks.editor' %}
                <h4>{{ providerArea }}</h4>
                {{ hook }}
            {% endfor %}
        {% endif %}
        
    </div>
{% endblock %}
{% block footer %}
    {{ parent() }}
    {% set formInitScript %}
        <script type="text/javascript">
        /* <![CDATA[ */
            
            ( function($) {
                $(document).ready(function() {
                    // initialise auto completion for user fields
                    initUserLiveSearch('munewsmodule_message_approver');
                    {% if form.moderationSpecificCreator is defined %}
                        initUserLiveSearch('munewsmodule_message_moderationSpecificCreator');
                    {% endif %}
                    mUNewsInitEditForm('{{ mode }}', '{% if mode != 'create' %}{{ message.id }}{% endif %}');
                    mUNewsInitUploadField('munewsmodule_message_imageUpload1_imageUpload1');
                    mUNewsInitUploadField('munewsmodule_message_imageUpload2_imageUpload2');
                    mUNewsInitUploadField('munewsmodule_message_imageUpload3_imageUpload3');
                    mUNewsInitUploadField('munewsmodule_message_imageUpload4_imageUpload4');
                    mUNewsInitDateField('munewsmodule_message_startDate');
                    mUNewsInitDateField('munewsmodule_message_endDate');
                });
            })(jQuery);
        /* ]]> */
        </script>
    {% endset %}
    {{ pageAddAsset('footer', formInitScript) }}
{% endblock %}
