<?php
/**
 * MUNews.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license 
 * @package MUNews
 * @author Michael Ueberschaer <kontakt@webdesign-in-bremen.com>.
 * @link http://webdesign-in-bremen.com
 * @link http://zikula.org
 * @version Generated by ModuleStudio 0.6.1 (http://modulestudio.de).
 */

/**
 * Bootstrap called when application is first initialised at runtime.
 *
 * This is only called once, and only if the core has reason to initialise this module,
 * usually to dispatch a controller request or API.
 *
 * For example you can register additional AutoLoaders with ZLoader::addAutoloader($namespace, $path)
 * whereby $namespace is the first part of the PEAR class name
 * and $path is the path to the containing folder.
 */
// initialise doctrine extension listeners
$helper = ServiceUtil::getService('doctrine_extensions');
$helper->getListener('sluggable');
$helper->getListener('timestampable');
$helper->getListener('standardfields');
munewsPerformRegularAmendments();

function munewsPerformRegularAmendments()
{
    $currentFunc = FormUtil::getPassedValue('func', 'main', 'GETPOST', FILTER_SANITIZE_STRING);
    if ($currentFunc == 'edit') {
        return;
    }

    $randProbability = mt_rand(1, 1000);

    if ($randProbability < 750) {
        return;
    }

    PageUtil::registerVar('MUNewsAutomaticArchiving', false, true);
    $entityManager = ServiceUtil::getService('doctrine.entitymanager');

    // update for messages becoming archived
    $entityClass = 'MUNews_Entity_Message';
    $repository = $entityManager->getRepository($entityClass);
    $repository->archiveObjects();
    PageUtil::setVar('MUNewsAutomaticArchiving', false);
}

